# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ncnn_tag: 20220420
  ncnn_install_PATH: $GITHUB_WORKSPACE/artifacts/ncnn
  #ncnn_install_root: ${HOME}/artifacts/ncnn/${ncnn_tag}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      - name: List environment variables
        run: env
      
      - name: Print GH CLI version and grant auth
        run: |
          gh --version
          #gh auth login --with-token ${{ secrets.GITHUB_TOKEN }}
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
        
      - name: Download ncnn prebuilt package
        run: gh release download ${ncnn_tag} -p "*-ubuntu-2004.zip" -R tencent/ncnn
      
      - name: Extract and Intall ncnn prebuilt package
        run: |
          pwd
          ls -al
          echo "!! ncnn_install_PATH is: ${ncnn_install_PATH}"
          mkdir -p ${ncnn_install_PATH}
          unzip ncnn-${ncnn_tag}-ubuntu-2004.zip -d $ncnn_install_PATH
          tree -L 2 $ncnn_install_PATH
          echo "!! HOME is $HOME"
          echo "!! GITHUB_WORKSPACE is $GITHUB_WORKSPACE/artifacts"
          tree -L 2 $HOME/artifacts
          tree -L 2 /home/runner/artifacts
      
      - name: cmake configure
        run: cmake -DCMAKE_BUILD_TYPE=Release . -B build

      - name: cmake build
        run: cmake --build build

#       - uses: dsaltares/fetch-gh-release-asset@master
#         with:
#           repo: 'tencent/ncnn'
#           version: 'tags/20220420'
#           file: 'ncnn-20220420-ubuntu-2004.zip'
#           token: ${{ secrets.GITHUB_TOKEN }}
